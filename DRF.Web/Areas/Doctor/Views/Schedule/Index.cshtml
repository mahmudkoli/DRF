@using DRF.Common
@model DRF.Web.Areas.Doctor.Models.ScheduleSearchModel
@using PagedList.Mvc

@{
    ViewBag.Title = "Schedule";
}

<section class="content-header">
    <h1>
        Schedule
        <small> Information</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i>Home</a></li>
        <li><a href="@Url.Action("Index","Schedule")"><i class="fa fa-dashboard"></i>Schedule</a></li>
        <li class="active"> Information</li>
    </ol>
</section>

<section class="content">
    <div class="box box-default">
        <div class="box-header with-border">
            <h3 class="box-title"> Schedule</h3>
            <div class="box-tools pull-right">
                <a href="@Request.UrlReferrer" class="btn btn-box-tool">
                    <i class="fa fa-arrow-circle-left"></i> Back
                </a>
                <div class="btn-group">
                    @using (Html.BeginForm("Index", "Schedule", FormMethod.Get, new { @id = "scheduleSearchForm" }))
                    {
                        <div class="btn-group">
                            @Html.DropDownListFor(model => model.Chamber, new SelectList(Model.ChamberCollection, "Id", "Name"), "All", 
                                new {@class = "form-control input-sm"})
                        </div>
                        <div class="btn-group">
                            @Html.DropDownListFor(model => model.Day, new List<SelectListItem>()
                            {
                                new SelectListItem() {Value = null, Text = "All"},
                                new SelectListItem() {Value = ((int) CustomEnum.Day.Saturday).ToString(), Text = "Saturday"},
                                new SelectListItem() {Value = ((int) CustomEnum.Day.Sunday).ToString(), Text = "Sunday"},
                                new SelectListItem() {Value = ((int) CustomEnum.Day.Monday).ToString(), Text = "Monday"},
                                new SelectListItem() {Value = ((int) CustomEnum.Day.Tuesday).ToString(), Text = "Tuesday"},
                                new SelectListItem() {Value = ((int) CustomEnum.Day.Wednesday).ToString(), Text = "Wednesday"},
                                new SelectListItem() {Value = ((int) CustomEnum.Day.Thursday).ToString(), Text = "Thursday"},
                                new SelectListItem() {Value = ((int) CustomEnum.Day.Friday).ToString(), Text = "Friday"},
                            }, new {@class = "form-control input-sm"})
                        </div>
                    }
                </div>
                <div class="btn-group">
                    <a class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="@Url.Action("Create","Schedule")">Add Schedule</a></li>
                        @*<li><a href="@Url.Action("Edit","Schedule")">Edit Schedule</a></li>*@
                        <li><a href="@Url.Action("Index","Profile")">Profile</a></li>
                        <li><a href="@Url.Action("Index","Appointment")">Appointment</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="box-body">

                <div class="table-responsive no-padding">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Chamber</th>
                                <th>Available Day</th>
                                <th>Start Time</th>
                                <th>End Time</th>
                                <th class="text-center">Duration (Min)</th>
                                <th class="text-center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ScheduleCollection)
                            {
                                <tr>
                                    <td class="col-md-3">@item.Chamber.Name</td>
                                    <td class="col-md-2">@((CustomEnum.Day)item.Day)</td>
                                    <td class="col-md-2">@item.StartTime.ToString("t")</td>
                                    <td class="col-md-2">@item.EndTime.ToString("t")</td>
                                    <td class="col-md-2 text-center">@item.DurationTime</td>
                                    <td class="col-md-1 text-center">
                                        <a onclick="confirmationDeleteSchedule( @item.Id )" class="btn btn-xs btn-danger fa fa-remove"></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @Html.PagedListPager(Model.ScheduleCollection, Page =>
                    Url.Action("Index", "Schedule", new RouteValueDictionary()
                    {
                        { "Page", Page }, { "PageSize", Model.PageSize }, { "Chamber", Model.Chamber },
                        { "Day", Model.Day }
                    }))

            </div>
        </div>
    </div>
</section>


@section Scripts{
    <script>

        $(document).ready(function () {
            $('#Chamber').on('change', function () {
                $('#scheduleSearchForm').submit();
            });
            $('#Day').on('change', function () {
                $('#scheduleSearchForm').submit();
            });
        });

        function confirmationDeleteSchedule(id){
            $.confirm({
                title: '<i class="fa fa-check-circle" aria-hidden="true"> Confirmation</i>',
                content: 'Are you sure want to delete ?',
                buttons: {
                    confirm: {
                        text: 'Confirm',
                        btnClass: 'btn-blue',
                        action: function () {
                            deleteSchedule(id);
                            }
                    },
                    cancel: {
                        text: 'Cancel',
                        action: function () {

                        }
                    }
                }
            });
        }

        function deleteSchedule(id) {
            var url = '@Url.Action("Delete", "Schedule")';
            var method = "GET";

            $.ajax({
                url: url,
                type: method,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: { id: id },
                success: function (data) {
                    if (data)
                        window.location.reload(true);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $.alert(textStatus + " ! please try again", '<i class="fa fa-exclamation-circle" aria-hidden="true"> Alert</i>');
                }
            });
        }
    </script>
}